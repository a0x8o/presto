local exchange (GATHER, SINGLE, [])
    remote exchange (GATHER, SINGLE, [])
        cross join:
            join (LEFT, PARTITIONED):
                remote exchange (REPARTITION, HASH, ["ca_state"])
                    join (INNER, PARTITIONED):
                        remote exchange (REPARTITION, HASH, ["c_current_addr_sk"])
                            join (INNER, PARTITIONED):
                                remote exchange (REPARTITION, HASH, ["cr_returning_customer_sk"])
                                    final aggregation over (ca_state, cr_returning_customer_sk)
                                        local exchange (GATHER, SINGLE, [])
                                            remote exchange (REPARTITION, HASH, ["ca_state", "cr_returning_customer_sk"])
                                                partial aggregation over (ca_state, cr_returning_customer_sk)
                                                    join (INNER, REPLICATED):
                                                        join (INNER, REPLICATED):
                                                            dynamic filter (["cr_returned_date_sk", "cr_returning_addr_sk", "cr_returning_customer_sk"])
                                                                scan catalog_returns
                                                            local exchange (GATHER, SINGLE, [])
                                                                remote exchange (REPLICATE, BROADCAST, [])
                                                                    scan date_dim
                                                        local exchange (GATHER, SINGLE, [])
                                                            remote exchange (REPLICATE, BROADCAST, [])
                                                                scan customer_address
                                local exchange (GATHER, SINGLE, [])
                                    remote exchange (REPARTITION, HASH, ["c_customer_sk"])
                                        dynamic filter (["c_current_addr_sk"])
                                            scan customer
                        local exchange (GATHER, SINGLE, [])
                            remote exchange (REPARTITION, HASH, ["ca_address_sk_4"])
                                scan customer_address
                final aggregation over (ca_state_88)
                    local exchange (GATHER, SINGLE, [])
                        remote exchange (REPARTITION, HASH, ["ca_state_88"])
                            partial aggregation over (ca_state_88)
                                final aggregation over (ca_state_88, cr_returning_customer_sk_28)
                                    local exchange (GATHER, SINGLE, [])
                                        remote exchange (REPARTITION, HASH, ["ca_state_88", "cr_returning_customer_sk_28"])
                                            partial aggregation over (ca_state_88, cr_returning_customer_sk_28)
                                                join (INNER, REPLICATED):
                                                    join (INNER, REPLICATED):
                                                        dynamic filter (["cr_returned_date_sk_21", "cr_returning_addr_sk_31"])
                                                            scan catalog_returns
                                                        local exchange (GATHER, SINGLE, [])
                                                            remote exchange (REPLICATE, BROADCAST, [])
                                                                scan date_dim
                                                    local exchange (GATHER, SINGLE, [])
                                                        remote exchange (REPLICATE, BROADCAST, [])
                                                            scan customer_address
            local exchange (GATHER, SINGLE, [])
                remote exchange (REPLICATE, BROADCAST, [])
                    single aggregation over ()
                        values (1 rows)
