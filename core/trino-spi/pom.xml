<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.trino</groupId>
        <artifactId>trino-root</artifactId>
        <version>428-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>trino-spi</artifactId>

    <properties>
        <air.main.basedir>${project.parent.basedir}</air.main.basedir>
        <released-artifacts.dir>${project.build.directory}/released-artifacts</released-artifacts.dir>
        <trino.check.skip-revapi>${air.check.skip-basic}</trino.check.skip-revapi>
    </properties>

    <!-- the SPI should have only minimal dependencies -->
    <dependencies>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.errorprone</groupId>
            <artifactId>error_prone_annotations</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>slice</artifactId>
        </dependency>

        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-context</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.openjdk.jol</groupId>
            <artifactId>jol-core</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>json</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.airlift</groupId>
            <artifactId>testing</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.trino</groupId>
            <artifactId>trino-testing-services</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>it.unimi.dsi</groupId>
            <artifactId>fastutil</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>io/trino/spi/trino-spi-version.txt</include>
                </includes>
            </resource>

            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>io/trino/spi/trino-spi-version.txt</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <dependencies>
                    <!-- allow both JUnit and TestNG -->
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit-platform</artifactId>
                        <version>${dep.plugin.surefire.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-testng</artifactId>
                        <version>${dep.plugin.surefire.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.revapi</groupId>
                <artifactId>revapi-maven-plugin</artifactId>
                <version>0.15.0</version>
                <configuration>
                    <skip>${trino.check.skip-revapi}</skip>
                    <ignoreSuggestionsFormat>xml</ignoreSuggestionsFormat>
                    <analysisConfiguration>
                        <revapi.filter>
                            <elements>
                                <exclude>
                                    <item>
                                        <matcher>java</matcher>
                                        <match>@io.trino.spi.Experimental(*) ^*;</match>
                                    </item>
                                </exclude>
                            </elements>
                        </revapi.filter>
                        <revapi.differences>
                            <ignore>true</ignore>
                            <differences>
                                <!-- Allow adding new annotations (such as @Nullable) -->
                                <item>
                                    <code>java.annotation.added</code>
                                </item>
                                <!-- Allow changing enum constant order (e.g., StandardErrorCode) -->
                                <item>
                                    <code>java.field.enumConstantOrderChanged</code>
                                </item>
                                <!-- Allow arbitrary changes to unstable APIs -->
                                <item>
                                    <regex>true</regex>
                                    <code>java.method.numberOfParametersChanged</code>
                                    <old>
                                        <matcher>java</matcher>
                                        <match>@io.trino.spi.Unstable *;</match>
                                    </old>
                                </item>
                                <!-- Allow removing things that were previously deprecated -->
                                <item>
                                    <regex>true</regex>
                                    <code>java\.(class|method|field)\.removed</code>
                                    <old>
                                        <matcher>java</matcher>
                                        <match>@java.lang.Deprecated(*) ^*;</match>
                                    </old>
                                </item>
                                <!-- Backwards incompatible changes since the previous release -->
                                <!-- Any exclusions below can be deleted after each release -->
                                <item>
                                    <ignore>true</ignore>
                                    <code>java.method.parameterTypeChanged</code>
                                    <old>parameter void io.trino.spi.security.SystemAccessControl::checkCanExecuteQuery(===io.trino.spi.security.SystemSecurityContext===)</old>
                                    <new>parameter void io.trino.spi.security.SystemAccessControl::checkCanExecuteQuery(===io.trino.spi.security.Identity===)</new>
                                </item>
                                <item>
                                    <ignore>true</ignore>
                                    <code>java.method.parameterTypeChanged</code>
                                    <old>parameter void io.trino.spi.security.SystemAccessControl::checkCanImpersonateUser(===io.trino.spi.security.SystemSecurityContext===, java.lang.String)</old>
                                    <new>parameter void io.trino.spi.security.SystemAccessControl::checkCanImpersonateUser(===io.trino.spi.security.Identity===, java.lang.String)</new>
                                </item>
                                <item>
                                    <ignore>true</ignore>
                                    <code>java.method.parameterTypeChanged</code>
                                    <old>parameter void io.trino.spi.security.SystemAccessControl::checkCanKillQueryOwnedBy(===io.trino.spi.security.SystemSecurityContext===, io.trino.spi.security.Identity)</old>
                                    <new>parameter void io.trino.spi.security.SystemAccessControl::checkCanKillQueryOwnedBy(===io.trino.spi.security.Identity===, io.trino.spi.security.Identity)</new>
                                </item>
                                <item>
                                    <ignore>true</ignore>
                                    <code>java.method.parameterTypeChanged</code>
                                    <old>parameter void io.trino.spi.security.SystemAccessControl::checkCanReadSystemInformation(===io.trino.spi.security.SystemSecurityContext===)</old>
                                    <new>parameter void io.trino.spi.security.SystemAccessControl::checkCanReadSystemInformation(===io.trino.spi.security.Identity===)</new>
                                </item>
                                <item>
                                    <ignore>true</ignore>
                                    <code>java.method.parameterTypeChanged</code>
                                    <old>parameter void io.trino.spi.security.SystemAccessControl::checkCanViewQueryOwnedBy(===io.trino.spi.security.SystemSecurityContext===, io.trino.spi.security.Identity)</old>
                                    <new>parameter void io.trino.spi.security.SystemAccessControl::checkCanViewQueryOwnedBy(===io.trino.spi.security.Identity===, io.trino.spi.security.Identity)</new>
                                </item>
                                <item>
                                    <ignore>true</ignore>
                                    <code>java.method.parameterTypeChanged</code>
                                    <old>parameter void io.trino.spi.security.SystemAccessControl::checkCanWriteSystemInformation(===io.trino.spi.security.SystemSecurityContext===)</old>
                                    <new>parameter void io.trino.spi.security.SystemAccessControl::checkCanWriteSystemInformation(===io.trino.spi.security.Identity===)</new>
                                </item>
                                <item>
                                    <ignore>true</ignore>
                                    <code>java.method.parameterTypeChanged</code>
                                    <old>parameter void io.trino.spi.security.SystemAccessControl::checkCanSetSystemSessionProperty(===io.trino.spi.security.SystemSecurityContext===, java.lang.String)</old>
                                    <new>parameter void io.trino.spi.security.SystemAccessControl::checkCanSetSystemSessionProperty(===io.trino.spi.security.Identity===, java.lang.String)</new>
                                </item>
                                <item>
                                    <ignore>true</ignore>
                                    <code>java.method.parameterTypeChanged</code>
                                    <old>parameter java.util.Collection&lt;io.trino.spi.security.Identity&gt; io.trino.spi.security.SystemAccessControl::filterViewQueryOwnedBy(===io.trino.spi.security.SystemSecurityContext===, java.util.Collection&lt;io.trino.spi.security.Identity&gt;)</old>
                                    <new>parameter java.util.Collection&lt;io.trino.spi.security.Identity&gt; io.trino.spi.security.SystemAccessControl::filterViewQueryOwnedBy(===io.trino.spi.security.Identity===, java.util.Collection&lt;io.trino.spi.security.Identity&gt;)</new>
                                </item>
                                <item>
                                    <ignore>true</ignore>
                                    <code>java.method.parameterTypeChanged</code>
                                    <old>parameter void io.trino.spi.security.SystemSecurityContext::&lt;init&gt;(io.trino.spi.security.Identity, ===java.util.Optional&lt;io.trino.spi.QueryId&gt;===)</old>
                                    <new>parameter void io.trino.spi.security.SystemSecurityContext::&lt;init&gt;(io.trino.spi.security.Identity, ===io.trino.spi.QueryId===)</new>
                                </item>
                                <item>
                                    <ignore>true</ignore>
                                    <code>java.method.returnTypeChanged</code>
                                    <old>method java.util.Optional&lt;io.trino.spi.QueryId&gt; io.trino.spi.security.SystemSecurityContext::getQueryId()</old>
                                    <new>method io.trino.spi.QueryId io.trino.spi.security.SystemSecurityContext::getQueryId()</new>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ArrayBlockBuilder::copyPositions(int[], int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ArrayBlockBuilder::copyRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method int io.trino.spi.block.ArrayBlockBuilder::getOffsetBase()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method int[] io.trino.spi.block.ArrayBlockBuilder::getOffsets()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ArrayBlockBuilder::getRawElementBlock()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ArrayBlockBuilder::getRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean[] io.trino.spi.block.ArrayBlockBuilder::getValueIsNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.ArrayBlockBuilder::mayHaveNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method void io.trino.spi.block.ArrayBlockBuilder::retainedBytesForEachPart(java.util.function.ObjLongConsumer&lt;java.lang.Object&gt;)</old>
                                </item>
                                <item>
                                    <code>java.class.noLongerInheritsFromClass</code>
                                    <old>class io.trino.spi.block.ArrayBlockBuilder</old>
                                    <new>class io.trino.spi.block.ArrayBlockBuilder</new>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.ArrayBlockBuilder</old>
                                    <new>class io.trino.spi.block.ArrayBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.ArrayBlockBuilder</old>
                                    <new>class io.trino.spi.block.ArrayBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.BlockBuilder::copyWithAppendedNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.BlockBuilder::getPositions(int[], int, int)</old>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>interface io.trino.spi.block.BlockBuilder</old>
                                    <new>interface io.trino.spi.block.BlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ByteArrayBlockBuilder::copyPositions(int[], int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ByteArrayBlockBuilder::copyRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.util.OptionalInt io.trino.spi.block.ByteArrayBlockBuilder::fixedSizeInBytesPerPosition()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method byte io.trino.spi.block.ByteArrayBlockBuilder::getByte(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.lang.String io.trino.spi.block.ByteArrayBlockBuilder::getEncodingName()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.ByteArrayBlockBuilder::getEstimatedDataSizeForStats(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.ByteArrayBlockBuilder::getPositionsSizeInBytes(boolean[], int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ByteArrayBlockBuilder::getRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.ByteArrayBlockBuilder::getRegionSizeInBytes(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ByteArrayBlockBuilder::getSingleValueBlock(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.ByteArrayBlockBuilder::isNull(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.ByteArrayBlockBuilder::mayHaveNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method void io.trino.spi.block.ByteArrayBlockBuilder::retainedBytesForEachPart(java.util.function.ObjLongConsumer&lt;java.lang.Object&gt;)</old>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.ByteArrayBlockBuilder</old>
                                    <new>class io.trino.spi.block.ByteArrayBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.Fixed12BlockBuilder::copyPositions(int[], int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.Fixed12BlockBuilder::copyRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.util.OptionalInt io.trino.spi.block.Fixed12BlockBuilder::fixedSizeInBytesPerPosition()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.lang.String io.trino.spi.block.Fixed12BlockBuilder::getEncodingName()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.Fixed12BlockBuilder::getEstimatedDataSizeForStats(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method int io.trino.spi.block.Fixed12BlockBuilder::getInt(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.Fixed12BlockBuilder::getLong(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.Fixed12BlockBuilder::getPositionsSizeInBytes(boolean[], int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.Fixed12BlockBuilder::getRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.Fixed12BlockBuilder::getRegionSizeInBytes(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.Fixed12BlockBuilder::getSingleValueBlock(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.Fixed12BlockBuilder::isNull(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.Fixed12BlockBuilder::mayHaveNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method void io.trino.spi.block.Fixed12BlockBuilder::retainedBytesForEachPart(java.util.function.ObjLongConsumer&lt;java.lang.Object&gt;)</old>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.Fixed12BlockBuilder</old>
                                    <new>class io.trino.spi.block.Fixed12BlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.Int128ArrayBlockBuilder::copyPositions(int[], int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.Int128ArrayBlockBuilder::copyRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.util.OptionalInt io.trino.spi.block.Int128ArrayBlockBuilder::fixedSizeInBytesPerPosition()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.lang.String io.trino.spi.block.Int128ArrayBlockBuilder::getEncodingName()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.Int128ArrayBlockBuilder::getEstimatedDataSizeForStats(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.Int128ArrayBlockBuilder::getLong(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.Int128ArrayBlockBuilder::getPositionsSizeInBytes(boolean[], int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.Int128ArrayBlockBuilder::getRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.Int128ArrayBlockBuilder::getRegionSizeInBytes(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.Int128ArrayBlockBuilder::getSingleValueBlock(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.Int128ArrayBlockBuilder::isNull(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.Int128ArrayBlockBuilder::mayHaveNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method void io.trino.spi.block.Int128ArrayBlockBuilder::retainedBytesForEachPart(java.util.function.ObjLongConsumer&lt;java.lang.Object&gt;)</old>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.Int128ArrayBlockBuilder</old>
                                    <new>class io.trino.spi.block.Int128ArrayBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.IntArrayBlockBuilder::copyPositions(int[], int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.IntArrayBlockBuilder::copyRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.util.OptionalInt io.trino.spi.block.IntArrayBlockBuilder::fixedSizeInBytesPerPosition()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.lang.String io.trino.spi.block.IntArrayBlockBuilder::getEncodingName()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.IntArrayBlockBuilder::getEstimatedDataSizeForStats(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method int io.trino.spi.block.IntArrayBlockBuilder::getInt(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.IntArrayBlockBuilder::getPositionsSizeInBytes(boolean[], int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.IntArrayBlockBuilder::getRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.IntArrayBlockBuilder::getRegionSizeInBytes(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.IntArrayBlockBuilder::getSingleValueBlock(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.IntArrayBlockBuilder::isNull(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.IntArrayBlockBuilder::mayHaveNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method void io.trino.spi.block.IntArrayBlockBuilder::retainedBytesForEachPart(java.util.function.ObjLongConsumer&lt;java.lang.Object&gt;)</old>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.IntArrayBlockBuilder</old>
                                    <new>class io.trino.spi.block.IntArrayBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.LongArrayBlockBuilder::copyPositions(int[], int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.LongArrayBlockBuilder::copyRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.util.OptionalInt io.trino.spi.block.LongArrayBlockBuilder::fixedSizeInBytesPerPosition()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.lang.String io.trino.spi.block.LongArrayBlockBuilder::getEncodingName()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.LongArrayBlockBuilder::getEstimatedDataSizeForStats(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.LongArrayBlockBuilder::getLong(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.LongArrayBlockBuilder::getPositionsSizeInBytes(boolean[], int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.LongArrayBlockBuilder::getRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.LongArrayBlockBuilder::getRegionSizeInBytes(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.LongArrayBlockBuilder::getSingleValueBlock(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.LongArrayBlockBuilder::isNull(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.LongArrayBlockBuilder::mayHaveNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method void io.trino.spi.block.LongArrayBlockBuilder::retainedBytesForEachPart(java.util.function.ObjLongConsumer&lt;java.lang.Object&gt;)</old>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.LongArrayBlockBuilder</old>
                                    <new>class io.trino.spi.block.LongArrayBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method void io.trino.spi.block.MapBlockBuilder::ensureHashTableLoaded()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.MapHashTables io.trino.spi.block.MapBlockBuilder::getHashTables()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean[] io.trino.spi.block.MapBlockBuilder::getMapIsNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method int io.trino.spi.block.MapBlockBuilder::getOffsetBase()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method int[] io.trino.spi.block.MapBlockBuilder::getOffsets()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.MapBlockBuilder::getRawKeyBlock()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.MapBlockBuilder::getRawValueBlock()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.MapBlockBuilder::mayHaveNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method void io.trino.spi.block.MapBlockBuilder::retainedBytesForEachPart(java.util.function.ObjLongConsumer&lt;java.lang.Object&gt;)</old>
                                </item>
                                <item>
                                    <code>java.class.noLongerInheritsFromClass</code>
                                    <old>class io.trino.spi.block.MapBlockBuilder</old>
                                    <new>class io.trino.spi.block.MapBlockBuilder</new>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.MapBlockBuilder</old>
                                    <new>class io.trino.spi.block.MapBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.MapBlockBuilder</old>
                                    <new>class io.trino.spi.block.MapBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.RowBlockBuilder::copyPositions(int[], int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.RowBlockBuilder::copyRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method int[] io.trino.spi.block.RowBlockBuilder::getFieldBlockOffsets()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method int io.trino.spi.block.RowBlockBuilder::getOffsetBase()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block[] io.trino.spi.block.RowBlockBuilder::getRawFieldBlocks()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.RowBlockBuilder::getRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean[] io.trino.spi.block.RowBlockBuilder::getRowIsNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.RowBlockBuilder::mayHaveNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method void io.trino.spi.block.RowBlockBuilder::retainedBytesForEachPart(java.util.function.ObjLongConsumer&lt;java.lang.Object&gt;)</old>
                                </item>
                                <item>
                                    <code>java.class.noLongerInheritsFromClass</code>
                                    <old>class io.trino.spi.block.RowBlockBuilder</old>
                                    <new>class io.trino.spi.block.RowBlockBuilder</new>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.RowBlockBuilder</old>
                                    <new>class io.trino.spi.block.RowBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.RowBlockBuilder</old>
                                    <new>class io.trino.spi.block.RowBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ShortArrayBlockBuilder::copyPositions(int[], int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ShortArrayBlockBuilder::copyRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.util.OptionalInt io.trino.spi.block.ShortArrayBlockBuilder::fixedSizeInBytesPerPosition()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.lang.String io.trino.spi.block.ShortArrayBlockBuilder::getEncodingName()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.ShortArrayBlockBuilder::getEstimatedDataSizeForStats(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.ShortArrayBlockBuilder::getPositionsSizeInBytes(boolean[], int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ShortArrayBlockBuilder::getRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.ShortArrayBlockBuilder::getRegionSizeInBytes(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method short io.trino.spi.block.ShortArrayBlockBuilder::getShort(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.ShortArrayBlockBuilder::getSingleValueBlock(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.ShortArrayBlockBuilder::isNull(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.ShortArrayBlockBuilder::mayHaveNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method void io.trino.spi.block.ShortArrayBlockBuilder::retainedBytesForEachPart(java.util.function.ObjLongConsumer&lt;java.lang.Object&gt;)</old>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.ShortArrayBlockBuilder</old>
                                    <new>class io.trino.spi.block.ShortArrayBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.VariableWidthBlockBuilder::copyPositions(int[], int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.VariableWidthBlockBuilder::copyRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method java.util.OptionalInt io.trino.spi.block.VariableWidthBlockBuilder::fixedSizeInBytesPerPosition()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method int io.trino.spi.block.VariableWidthBlockBuilder::getPositionOffset(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.VariableWidthBlockBuilder::getPositionsSizeInBytes(boolean[], int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.airlift.slice.Slice io.trino.spi.block.VariableWidthBlockBuilder::getRawSlice(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method io.trino.spi.block.Block io.trino.spi.block.VariableWidthBlockBuilder::getRegion(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method long io.trino.spi.block.VariableWidthBlockBuilder::getRegionSizeInBytes(int, int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method int io.trino.spi.block.VariableWidthBlockBuilder::getSliceLength(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.VariableWidthBlockBuilder::isEntryNull(int)</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method boolean io.trino.spi.block.VariableWidthBlockBuilder::mayHaveNull()</old>
                                </item>
                                <item>
                                    <code>java.method.removed</code>
                                    <old>method void io.trino.spi.block.VariableWidthBlockBuilder::retainedBytesForEachPart(java.util.function.ObjLongConsumer&lt;java.lang.Object&gt;)</old>
                                </item>
                                <item>
                                    <code>java.class.noLongerInheritsFromClass</code>
                                    <old>class io.trino.spi.block.VariableWidthBlockBuilder</old>
                                    <new>class io.trino.spi.block.VariableWidthBlockBuilder</new>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.VariableWidthBlockBuilder</old>
                                    <new>class io.trino.spi.block.VariableWidthBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <code>java.class.noLongerImplementsInterface</code>
                                    <old>class io.trino.spi.block.VariableWidthBlockBuilder</old>
                                    <new>class io.trino.spi.block.VariableWidthBlockBuilder</new>
                                    <interface>io.trino.spi.block.Block</interface>
                                </item>
                                <item>
                                    <ignore>true</ignore>
                                    <code>java.method.numberOfParametersChanged</code>
                                    <old>method void io.trino.spi.security.SystemSecurityContext::&lt;init&gt;(io.trino.spi.security.Identity, java.util.Optional&lt;io.trino.spi.QueryId&gt;)</old>
                                    <new>method void io.trino.spi.security.SystemSecurityContext::&lt;init&gt;(io.trino.spi.security.Identity, io.trino.spi.QueryId, java.time.Instant)</new>
                                </item>
                            </differences>
                        </revapi.differences>
                    </analysisConfiguration>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.revapi</groupId>
                        <artifactId>revapi-java</artifactId>
                        <version>0.28.1</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
